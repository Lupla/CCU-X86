--- occu/WebUI/www/api/methods/session/login.tcl.orig
+++ /www/api/methods/session/login.tcl
@@ -40,37 +40,19 @@
 set username $args(username)
 set password $args(password)
 
-# Schritt 1: Session erstellen
+# Schritt 1: Benutzeranmeldung und Session erstellen
 
-set request  [::http::geturl $LOGIN_URL]
+set request  [::http::geturl $LOGIN_URL -query [::http::formatQuery tbUsername $username tbPassword $password]]
 set location [getHttpHeader $request location]
+set code     [::http::code $request]
 ::http::cleanup $request
 
-if { ![regexp {sid=@([^@]*)@} $location dummy sid] } then {
-  jsonrpc_error 501 "too many sessions"
+if { -1 != [string first 503 $code] } then {
+  jsonrpc_error 503 "service not available"
 }
 
-# Schritt 2: Benutzeranmeldung
-
-set url   "$LOGIN_URL?sid=@$sid@"
-set query [::http::formatQuery tbUsername $username tbPassword $password]
-  
-set request  [::http::geturl $url -query $query]
-set location [getHttpHeader $request location]
-set code     [::http::code $request]
-::http::cleanup $request
-  
-if { -1 != [string first 500 $code] } then {
-  hmscript "system.ClearSessionID(\"$sid\");"
-  jsonrpc_error 501 "invalid session id"
-}
-  
-if { -1 != [string first error $location] } then {
-  hmscript "system.ClearSessionID(\"$sid\");"
-  jsonrpc_error 502 "invalid username oder password"
+if { ![regexp {sid=@([^@]*)@} $location dummy sid] } then {
+  jsonrpc_error 501 "invalid credentials or too many sessions"
 }
-  
-jsonrpc_response [json_toString $sid]
-
-
 
+jsonrpc_response [json_toString $sid]
--- occu/WebUI/www/tcl/eq3/session.tcl.orig
+++ /www/tcl/eq3/session.tcl
@@ -41,43 +41,26 @@
 #
 # @throws "create", falls keine Session-Id erstellt werden konnte
 #                   (z.B.: zu viele gleichzeitige Sitzungen)
-# @throws "id", falls die erzeugte Session-Id ungültig ist
-#               (das sollte eigentlich niemals geschehen)
 # @throws "credentials", falls Benutzername oder Passwort falsch sind
 ##
 proc session_login { username password } {
   global LOGIN_URL
-  
-  # Schritt 1: Session erstellen
-  
-  set request  [::http::geturl $LOGIN_URL]
+ 
+  # Schritt 1: Benutzeranmeldung und Session erstellen
+
+  set request  [::http::geturl $LOGIN_URL -query [::http::formatQuery tbUsername $username tbPassword $password]]
   set location [session_getHttpHeader $request location]
+  set code     [::http::code $request]
   ::http::cleanup $request
 
-  if { ![regexp {sid=@([^@]*)@} $location dummy sid] } then {
+  if { -1 != [string first 503 $code] } then {
     error "create"
   }
 
-  # Schritt 2: Benutzeranmeldung
-  
-  set url   "$LOGIN_URL?sid=@$sid@"
-  set query [::http::formatQuery tbUsername $username tbPassword $password]
-  
-  set request  [::http::geturl $url -query $query]
-  set location [session_getHttpHeader $request location]
-  set code     [::http::code $request]
-  ::http::cleanup $request
-  
-  if { -1 != [string first 500 $code] } then {
-    session_logout $sid
-    error "id"
-  }
-  
-  if { -1 != [string first error $location] } then {
-    session_logout $sid
+  if { ![regexp {sid=@([^@]*)@} $location dummy sid] } then {
     error "credentials"
   }
-  
+
   return $sid
 }
 
